block0(s(2), s(1), s(0))=>
	s(3) = 32
	nop(PUSH)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 0
	nop(PUSH)
	s(2) = sha3(s(3), s(2))
	nop(SHA3)
	s(3) = 0
	nop(PUSH)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(3) = mload(s(3))
	nop(MLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH)
	s(6) = 256
	nop(PUSH)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = sload(s(6))
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH)
	s(9) = 160
	nop(PUSH)
	s(10) = 2
	nop(PUSH)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1
	nop(PUSH)
	s(9) = 160
	nop(PUSH)
	s(10) = 2
	nop(PUSH)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	sstore(s(5),s(4))
	nop(SSTORE)
	nop(POP)
	s(3) = 32
	nop(PUSH)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(3) = mload(s(3))
	nop(MLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH)
	s(6) = 256
	nop(PUSH)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = sload(s(6))
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH)
	s(9) = 160
	nop(PUSH)
	s(10) = 2
	nop(PUSH)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1
	nop(PUSH)
	s(9) = 160
	nop(PUSH)
	s(10) = 2
	nop(PUSH)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	sstore(s(5),s(4))
	nop(SSTORE)
	nop(POP)
	s(3) = 64
	nop(PUSH)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(3) = mload(s(3))
	nop(MLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 2
	nop(PUSH)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH)
	s(6) = 256
	nop(PUSH)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = sload(s(6))
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH)
	s(9) = 160
	nop(PUSH)
	s(10) = 2
	nop(PUSH)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1
	nop(PUSH)
	s(9) = 160
	nop(PUSH)
	s(10) = 2
	nop(PUSH)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	sstore(s(5),s(4))
	nop(SSTORE)
	nop(POP)
	s(3) = 96
	nop(PUSH)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(3) = mload(s(3))
	nop(MLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 3
	nop(PUSH)
	s(4) = s(5)+s(4)
	nop(ADD)
	sstore(s(4),s(3))
	nop(SSTORE)
	s(3) = 128
	nop(PUSH)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(3) = mload(s(3))
	nop(MLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4
	nop(PUSH)
	s(4) = s(5)+s(4)
	nop(ADD)
	sstore(s(4),s(3))
	nop(SSTORE)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(1) = 43373437157988387145922135219119068007486551882878408721440221192089074425177
	nop(PUSH)
	s(2) = 0
	nop(PUSH)
	s(3) = caller
	nop(CALLER)
	s(4) = s(0)
	nop(DUP4)
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = 5
	nop(PUSH)
	s(6) = sload(s(6))
	nop(SLOAD)
	s(7) = 64
	nop(PUSH)
	s(7) = mload(s(7))
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1
	nop(PUSH)
	s(11) = 160
	nop(PUSH)
	s(12) = 2
	nop(PUSH)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)

